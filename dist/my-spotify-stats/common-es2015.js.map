{"version":3,"sources":["./src/app/shared/services/storage.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA2C;;AAKpC,MAAM,cAAc;IAGzB;QAFA,gBAAW,GAAG,KAAK,CAAC;IAEJ,CAAC;IAEjB;;;;OAIG;IACH,mBAAmB,CAAC,QAAgB,EAAE,KAAa;QACjD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED;;;OAGG;IACH,mBAAmB,CAAC,SAAkB;QACpC,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,SAAS,IAAI,cAAc,EAAE,CAAC,CAAC;IAChE,CAAC;;4EAtBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  isAccessSet = false;\n\n  constructor() { }\n\n  /**\n   * set local storage item\n   * @param itemName - item key\n   * @param token - token key\n   */\n  setLocalStorageItem(itemName: string, token: string): void {\n    console.log(token);\n    this.isAccessSet = true;\n    localStorage.setItem(itemName, token);\n  }\n\n  /**\n   * gets local storage value\n   * @param tokenName - token key\n   */\n  getLocalStorageItem(tokenName?: string): string {\n    return localStorage.getItem(`${tokenName || 'access-token'}`);\n  }\n}\n"],"sourceRoot":"webpack:///"}